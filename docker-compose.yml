version: '3.8'

services:
  heart-protocol:
    build: .
    container_name: heart-protocol-app
    environment:
      - BLUESKY_HANDLE=${BLUESKY_HANDLE}
      - BLUESKY_APP_PASSWORD=${BLUESKY_APP_PASSWORD}
      - DATABASE_URL=postgresql://postgres:heartprotocol@postgres:5432/heart_protocol
      - REDIS_URL=redis://redis:6379/0
      - CARE_MODE=production
    ports:
      - "8080:8080"
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - heart-network

  feed-generator:
    build: ./feed-generator
    container_name: heart-protocol-feeds
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:heartprotocol@postgres:5432/heart_protocol
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - heart-network

  postgres:
    image: postgres:15-alpine
    container_name: heart-protocol-db
    environment:
      - POSTGRES_DB=heart_protocol
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=heartprotocol
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - heart-network

  redis:
    image: redis:7-alpine
    container_name: heart-protocol-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - heart-network

  prometheus:
    image: prom/prometheus:latest
    container_name: heart-protocol-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - heart-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:

networks:
  heart-network:
    driver: bridge